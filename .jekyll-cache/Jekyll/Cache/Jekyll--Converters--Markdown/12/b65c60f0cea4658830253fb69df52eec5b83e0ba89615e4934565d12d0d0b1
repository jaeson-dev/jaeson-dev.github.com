I"b<h2 id="class와-struct">Class와 Struct</h2>

<p>프로그램 코드를 구조화 하기 위해 쓰임.</p>

<h4 id="class와-struct의-공통점">Class와 Struct의 공통점</h4>
<ul>
  <li>값을 저장하기 위해 properties를 정의 할 수 있다.</li>
  <li>기능 제공을 위한 method를 정의 할 수 있다.</li>
  <li>.을 이용하여 내부의 property와 method에 접근 할 수 있다.</li>
  <li>초기 상태를 set up 할 수 있는  initializers를 정의한다.</li>
</ul>

<h4 id="class만의-특징은-다음과-같다">Class만의 특징은 다음과 같다.</h4>
<ul>
  <li>상속을 통해 클래스의 속성을 다른 클래스에게 물려 줄 수 있다.</li>
  <li>타입캐스팅을 통해 런타임시 클래스의 인스턴스 타입을 확인 할 수 있다.</li>
  <li>소멸자(deinit)를 통해 할당된 자원을 free up 할 수 있다.</li>
  <li>ARC로 메모리를 관리</li>
</ul>

<h4 id="class와-struct의-차이점">Class와 Struct의 차이점</h4>
<ul>
  <li>Struct는 값타입이고 Class는 참조타입이다.</li>
</ul>

<p>참조타입과 값타입이 무엇인지 쉽게 이해 할 수 있는 쉬운 예제를 보자.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">class</span> <span class="kt">BankAccountClass</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">accountBalance</span><span class="p">:</span> <span class="kt">Float</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">accountNumber</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
<span class="p">}</span>

  <span class="kd">struct</span> <span class="kt">BankAccountStruct</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">accountBalance</span><span class="p">:</span> <span class="kt">Float</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">accountNumber</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
<span class="p">}</span>

<span class="k">var</span> <span class="nv">class1</span> <span class="o">=</span> <span class="kt">BankAccountClass</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">class2</span> <span class="o">=</span> <span class="n">class1</span>
<span class="k">var</span> <span class="nv">class3</span> <span class="o">=</span> <span class="n">class2</span>

<span class="n">class3</span><span class="o">.</span><span class="n">accountBalance</span> <span class="o">=</span> <span class="mf">10000.0</span>     <span class="c1">// class3의 accountBalance변경</span>
<span class="n">class1</span><span class="o">.</span><span class="n">accountBalance</span>   <span class="c1">// 10000</span>
<span class="n">class2</span><span class="o">.</span><span class="n">accountBalance</span>   <span class="c1">// 10000</span>
<span class="n">class3</span><span class="o">.</span><span class="n">accountBalance</span>   <span class="c1">// 10000</span>

<span class="k">var</span> <span class="nv">struct1</span> <span class="o">=</span> <span class="kt">BankAccountStruct</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">struct2</span> <span class="o">=</span> <span class="n">struct1</span>
<span class="k">var</span> <span class="nv">struct3</span> <span class="o">=</span> <span class="n">struct2</span>

<span class="n">struct3</span><span class="o">.</span><span class="n">accountNumber</span> <span class="o">=</span> <span class="mi">1103214567</span>      <span class="c1">// struct3의 accountNumber변경</span>
<span class="n">struct1</span><span class="o">.</span><span class="n">accountNumber</span>   <span class="c1">// 0</span>
<span class="n">struct2</span><span class="o">.</span><span class="n">accountNumber</span>   <span class="c1">// 0</span>
<span class="n">struct3</span><span class="o">.</span><span class="n">accountNumber</span>   <span class="c1">// 1103214567</span>

</code></pre></div></div>

:ET